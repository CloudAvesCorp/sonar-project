/**
This schema holds the purchase and sale details on basis of sign field (Buy= "+", Sale = "-"). 
And this table also maintained stock input/output register.

Columns Defintions:
	custcode: Customer unique code from customers table,
	barcode: barcode generated by items table,
	billno: new bill number,
	billdate: current bill date,
	pcs: set/pcs of the ornaments,
	sign: Buy and sale,
	stone_wt: If used stone in gold and silver,
	gross_wt: total weight,
	net_wt: total weight - stone weight,
	purity_wt: carret details ex-24ct, 23ct, 22ct,18ct ,
	rate: current rate comming from rates table,
	amount: rate * net_wt
	making: making charges
	extra: extra charges
	totalamt: amount + making + extra
	discount: any discount
	vat: vat charge
	invoiceval: totalamt - (discount + vat)
*/
var mongoose = require('mongoose');
var stockSchema = new mongoose.Schema({
	custcode: String,
	barcode: String,
	billno: String,
	billdate: { type: Date, default: Date.now },
	pcs: String,
	sign: String,
	stone_wt: { type: Number, default: 0 },
	gross_wt: { type: Number, default: 0 },
	net_wt: { type: Number, default: 0 },
	purity_wt: { type: Number, default: 0 },
	rate: { type: Number, default: 0 },
	amount: { type: Number, default: 0 },
	making: { type: Number, default: 0 },
	extra: { type: Number, default: 0 },
	totalamt: { type: Number, default: 0 },
	discount: { type: Number, default: 0 },
	vat: { type: Number, default: 0 },
	invoiceval: { type: Number, default: 0 }
});
mongoose.model('Stock', stockSchema);
